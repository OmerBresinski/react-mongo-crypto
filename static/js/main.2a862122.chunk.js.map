{"version":3,"sources":["pages/Signatures/Signatures.js","pages/Signatures/SignMessage.js","pages/Signatures/VerifyMessage.js","components/Tabs/style.js","components/Tabs/Tabs.js","components/TextInput/TextInput.js","components/Text/style.js","components/Text/Text.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","pages/Home/style.js","pages/Home/Home.js","hooks/useForm.js","hooks/useHash.js","pages/Hash/style.js","pages/Hash/Hash.js","components/BlockForm/style.js","components/BlockForm/BlockForm.js","pages/Block/style.js","pages/Block/Block.js","components/BlockchainForm/style.js","components/BlockchainForm/BlockchainForm.js","pages/Blockchain/style.js","pages/Blockchain/Blockchain.js","pages/Distributed/style.js","pages/Distributed/Distributed.js","pages/Keys/style.js","pages/Keys/Keys.js","pages/Tokens/style.js","pages/Tokens/Tokens.js","AppRouter.js","index.js","pages/Signatures/style.js","components/Button/Button.js","contexts/KeysContextProvider.js","constant.js"],"names":["SECTIONS","sign","verify","Signatures","useState","activeTab","setActiveTab","message","setMessage","useContext","KeysContext","privateKey","publicKey","handlePrivateKeyChange","handlePublicKeyChange","ec","signature","setSignature","visibleSection","setVisibleSection","isVerified","setIsVerified","useEffect","binaryMessage","Buffer","from","SHA256","toString","keyFromPrivate","toDER","handleMessageChange","value","size","bold","items","onChange","newValue","messageSignature","onMessageChange","onPrivateKeyChange","onSignClick","onPublicKeyChange","onVerifyClick","key","keyFromPublic","SignMessage","fieldName","variant","C","outlined","label","multiline","rows","onClick","color","disabled","Alert","props","elevation","filled","VerifyMessage","isSnackbarOpen","setIsSnackbarOpen","open","autoHideDuration","onClose","severity","styled","div","Tabs","_e","aria-label","indicatorColor","textColor","scrollButtons","map","item","index","TextInput","type","isDirty","isValid","required","placeholder","autoFocus","standard","small","validate","length","TextField","fullWidth","e","target","error","Text","span","children","Typography","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","primary","main","CssBaseline","TABS","NavBar","history","useHistory","setValue","match","useRouteMatch","navigateToInitialTab","page","params","pageIndex","findIndex","tab","toLowerCase","AppBar","position","style","top","textContent","push","Tab","Home","Content","Header","useForm","submit","form","setForm","handleChange","useCallback","currentForm","handleNumberFieldChange","isNaN","applyDirtyForm","dirtyForm","Object","keys","forEach","isValidForm","tmpIsValid","values","handleSubmit","editEntry","tmpForm","useHash","data","hash","setHash","sha256","calculateHash","Hash","Form","BlockForm","width","previousHash","dataRows","onHash","setIsDirty","transactions","isValidHash","setIsValidHash","transactionParams","setTransactionParams","block","nonce","JSON","stringify","validateHash","substring","difficulty","Array","join","handleTransactionChange","handleTransactionAmountChange","amount","to","display","gap","Button","hashString","maxNonce","Block","BlockChain","BlockchainForm","initialBlocks","blocks","setBlocks","handleHashChange","tmpBlocks","Blockchain","Distributed","Blockchains","Keys","KeyPair","PrivateKey","PublicKey","handleRandomClick","Tokens","AppRouter","KeysContextProvider","exact","path","home","component","P","tokens","signatures","blockchain","distributed","ReactDOM","render","document","querySelector","SignatureContent","Navigation","default","medium","useRef","EC","setPrivateKey","setPublicKey","Provider","current","genKeyPair","getPrivate","getPublic","createContext","SIZE","large","VARIANT","text","contained","COLORS","inherit","secondary","ROUTES","CRYPTO"],"mappings":"mNA8FMA,EAAW,CACfC,KAAM,OACNC,OAAQ,UAGKC,IA1FI,WACjB,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EACEC,qBAAWC,KADLC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,uBAAwBC,EAAvD,EAAuDA,sBAAuBC,EAA9E,EAA8EA,GAE9E,EAAkCX,mBAAS,IAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAA4Cb,mBAASJ,EAASC,MAA9D,mBAAOiB,EAAP,KAAuBC,EAAvB,KACA,EAAoCf,oBAAS,GAA7C,mBAAOgB,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WAEJH,EADU,IAAdd,EACsBL,EAASE,OACTF,EAASC,QAC9B,CAACI,IAEJ,IAAMJ,EAAO,WACX,GAAIU,EAAY,CACd,IAAMY,EAAgBC,EAAOC,KAAKC,iBAAOnB,GAASoB,YAAYA,SAAS,OACvEV,EACEO,EAAOC,KACLV,EAAGd,KAAKsB,EAAeR,EAAGa,eAAejB,IAAakB,SACtDF,SAAS,UAaXG,EAAsB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC7BvB,EAAWuB,IAOb,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,KAAK,OAAOC,MAAI,EAAtB,0BAIF,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,MAAO,CAAC,OAAQ,UAChB7B,UAAWA,EACX8B,SAjBY,SAACC,GACvB9B,EAAa8B,QAmBNlB,IAAmBlB,EAASC,KAC3B,cAAC,IAAD,CACEM,QAASA,EACTI,WAAYA,EACZ0B,iBAAkBrB,EAClBsB,gBAAiBR,EACjBS,mBAAoB1B,EACpB2B,YAAavC,IAGf,cAAC,IAAD,CACEM,QAASA,EACTK,UAAWA,EACXyB,iBAAkBrB,EAClBsB,gBAAiBR,EACjBW,kBAAmB3B,EACnB0B,YAAavC,EACbyC,cAjDG,WACb,GAAI9B,EAAW,CACb,IAAM+B,EAAM5B,EAAG6B,cAAchC,EAAW,OAClCW,EAAgBC,EAAOC,KAAKC,iBAAOnB,GAASoB,YAAYA,SAAS,OACvEN,EAAcsB,EAAIzC,OAAOqB,EAAeP,MA8ChCI,WAAYA,e,0DCrF1B,+CA6CeyB,IAvCK,SAAC,GAOd,IANLtC,EAMI,EANJA,QACAI,EAKI,EALJA,WACA0B,EAII,EAJJA,iBACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,YAEA,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEM,UAAU,UACVC,QAASC,IAAUC,SACnBd,SAAUG,EACVY,MAAO,UACPC,WAAS,EACTC,KAAM,GACNrB,MAAOxB,IAET,cAAC,IAAD,CACEuC,UAAU,aACVC,QAASC,IAAUC,SACnBd,SAAUI,EACVW,MAAO,cACPnB,MAAOpB,IAET,cAAC,IAAD,CAAQuC,MAAM,OAAOG,QAASb,EAAac,MAAO,UAAWP,QAAQ,aACrE,cAAC,IAAD,CACED,UAAU,mBACVC,QAASC,IAAUC,SACnBd,SAAU,aACVe,MAAO,oBACPnB,MAAOM,EACPkB,UAAQ,S,oHC/BVC,EAAQ,SAACC,GACb,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGX,QAASC,IAAUW,QAAYF,KAiEjDG,IA9DO,SAAC,GAQhB,IAPLrD,EAOI,EAPJA,QACAK,EAMI,EANJA,UACAyB,EAKI,EALJA,iBACAC,EAII,EAJJA,gBACAG,EAGI,EAHJA,kBACAC,EAEI,EAFJA,cACAtB,EACI,EADJA,WAEA,EAA4ChB,oBAAS,GAArD,mBAAOyD,EAAP,KAAuBC,EAAvB,KAWA,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEhB,UAAU,UACVC,QAASC,IAAUC,SACnBd,SAAUG,EACVY,MAAO,UACPC,WAAS,EACTC,KAAM,GACNrB,MAAOxB,IAET,cAAC,IAAD,CACEuC,UAAU,YACVC,QAASC,IAAUC,SACnBd,SAAUM,EACVS,MAAO,aACPnB,MAAOnB,IAET,cAAC,IAAD,CACEkC,UAAU,YACVC,QAASC,IAAUC,SACnBd,SAAU,aACVe,MAAO,YACPnB,MAAOM,IAET,cAAC,IAAD,CACEa,MAAM,SACNG,QApCoB,WACxBS,GAAkB,GAClBpB,KAmCIY,MAAO,UACPP,QAAQ,aAEV,cAAC,IAAD,CAAUgB,KAAMF,EAAgBG,iBAAkB,IAAMC,QAnCxC,WAClBH,GAAkB,IAkChB,SACE,cAACN,EAAD,CAAOU,SAAU9C,EAAa,UAAY,QAA1C,SACGA,EACG,6CACA,uC,+GCjEM+C,EAAOC,IAAV,0B,MCyBFC,EAtBF,SAAC,GAAoC,IAAlCnC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAU9B,EAAgB,EAAhBA,UAK/B,OACE,cAAC,IAAD,CACE0B,MAAO1B,EACP8B,SAPiB,SAACmC,EAAIlC,GACxBD,EAASC,IAOPmC,aAAW,aACXC,eAAe,UACfC,UAAU,UACV1B,QAAQ,aACR2B,cAAc,OAPhB,SASGxC,EAAMyC,KAAI,SAACC,EAAMC,GAChB,OAAO,cAAC,IAAD,CAAoB3B,MAAO0B,EAAMC,MAAOA,GAA3BA,U,4ICkCbC,EAnDG,SAAC,GAgBZ,IAfL1B,EAeI,EAfJA,KACA2B,EAcI,EAdJA,KACA7B,EAaI,EAbJA,MACA8B,EAYI,EAZJA,QACAC,EAWI,EAXJA,QACAC,EAUI,EAVJA,SACA3B,EASI,EATJA,SACApB,EAQI,EARJA,SACAgB,EAOI,EAPJA,UACAL,EAMI,EANJA,UAMI,IALJf,aAKI,MALI,GAKJ,EAJJoD,EAII,EAJJA,YAII,IAHJC,iBAGI,aAFJrC,eAEI,MAFMC,IAAUqC,SAEhB,MADJrD,YACI,MADGgB,IAAOsC,MACV,EACJhE,qBAAU,WACRa,EAAS,CAAEW,YAAWf,MAAOA,EAAOkD,QAASM,EAASxD,OACrD,IAEH,IAAMwD,EAAW,SAACxD,GAChB,OAAY,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOyD,QAAS,GASzB,OACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTX,KAAMA,EACN/C,KAAMA,EACNoB,KAAMA,EACNF,MAAOA,EACPnB,MAAOA,EACPgB,QAASA,EACTmC,SAAUA,EACV3B,SAAUA,EACV6B,UAAWA,EACXjC,UAAWA,EACXhB,SAnBiB,SAACwD,GACpB,IAAM5D,EAAQ4D,EAAEC,OAAO7D,MACjBkD,EAAUM,EAASxD,GACzBI,EAAS,CAAEW,YAAWf,QAAOkD,aAiB3BE,YAAaA,EACbU,OAAQtC,GAAYyB,IAAYC,M,qNChDzBa,E,KAAO3B,EAAO4B,KAAV,oEACF,qBAAG/D,QACD,qBAAGC,KAAmB,MAAQ,S,OCUhC6D,EAVF,SAAC,GAAuC,IAAD,IAApC9D,YAAoC,MAA7B,OAA6B,EAArBgE,EAAqB,EAArBA,SAAU/D,EAAW,EAAXA,KACvC,OACE,cAACgE,EAAA,EAAD,UACE,cAAC,EAAD,CAAQjE,KAAMA,EAAMC,KAAMA,EAA1B,SACG+D,Q,sRC6BME,EAjCO,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SACjBG,EAAY,CAChBC,OAAQ,CACNC,KAAM,CACJC,gBAAiB,aAIjBC,EAAQC,IAAMC,SAClB,kBACEC,YAAe,CACbP,YACAQ,QAAS,CACP5B,KAAM,OACN6B,QAAS,CACPC,KAAM,WAERhB,MAAO,CACLgB,KAAM,gBAId,IAGF,OACE,eAAC,IAAD,CAAUN,MAAOA,EAAjB,UACE,cAACO,EAAA,EAAD,IACCd,M,0CCmBDe,EAAO,CACX,OACA,OACA,QACA,aACA,cACA,SACA,WACA,OACA,aACA,eAGaC,EAzDA,WACb,IAAMC,EAAUC,cAChB,EAA0B9G,mBAAS,GAAnC,mBAAO2B,EAAP,KAAcoF,EAAd,KACMC,EAAQC,YAAc,UAE5B/F,qBAAU,WACRgG,MACC,CAACF,IAEJ,IAMME,EAAuB,WAC3B,GAAIF,EAAO,CACT,IAAMG,EAAOH,EAAMI,OAAOD,KACpBE,EAAYV,EAAKW,WACrB,SAACC,GAAD,OAAY,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKC,kBAAL,OAAuBL,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMK,kBAExCT,EAASM,GAAa,KAI1B,OACE,cAACI,EAAA,EAAD,CAAQC,SAAS,SAASxE,MAAM,cAAcyE,MAAO,CAAED,SAAU,QAASE,IAAK,GAA/E,SACE,cAAC3D,EAAA,EAAD,CACEtC,MAAOA,EACPI,SApBe,SAACmC,EAAIlC,GAAc,IAAD,IAC/BmF,EAAI,UAAGjD,EAAGsB,cAAN,iBAAG,EAAWqC,mBAAd,aAAG,EAAwBL,cACrCX,EAAQiB,KAAKlF,IAASuE,IACtBJ,EAAS/E,IAkBLmC,aAAW,aACXC,eAAe,UACfC,UAAU,UACV1B,QAAQ,aACR2B,cAAc,OAPhB,SASGqC,EAAKpC,KAAI,SAACgD,EAAK9C,GACd,OAAO,cAACsD,EAAA,EAAD,CAAiBjF,MAAOyE,EAAK9C,MAAOA,GAA1BA,W,wBC1CduD,GAAOjE,KAAOC,IAAV,gJAQJiE,GAAUlE,KAAOC,IAAV,kKASPkE,GAASnE,KAAOC,IAAV,+CCDJgE,GAdF,WACX,OACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAACtC,EAAA,EAAD,CAAM9D,KAAK,OAAOC,MAAI,EAAtB,oC,kBCPGsG,GAAU,SAACC,GACtB,MAAwBpI,mBAAS,IAAjC,mBAAOqI,EAAP,KAAaC,EAAb,KAEMC,EAAeC,uBAAY,YAAoC,IAAjC9F,EAAgC,EAAhCA,UAAWf,EAAqB,EAArBA,MAAOkD,EAAc,EAAdA,QACpDyD,GAAQ,SAACG,GACP,OAAO,6BACFA,GADL,mBAEG/F,EAFH,6BAEoB+F,EAAY/F,IAFhC,IAE4Cf,QAAOkD,mBAGpD,IAEG6D,EAA0BF,uBAAY,YAAoC,IAAjC9F,EAAgC,EAAhCA,UAAWf,EAAqB,EAArBA,MAAOkD,EAAc,EAAdA,QAC3D8D,MAAMhH,IAGR4G,EAAa,CAAE7F,YAAWf,QAAOkD,cAElC,IAiBG+D,EAAiB,WACrBN,GAAQ,SAACG,GACP,IAAMI,EAAY,GAIlB,OAHAC,OAAOC,KAAKN,GAAaO,SAAQ,SAACzG,GAChCsG,EAAUtG,GAAV,6BAAsBkG,EAAYlG,IAAlC,IAAwCqC,SAAS,OAE5CiE,MAILI,EAAc,WAClB,IAAIC,GAAa,EAMjB,OALAJ,OAAOK,OAAOd,GAAMW,SAAQ,YAAiB,EAAdnE,UAE3BqE,GAAa,MAGVA,GAGT,MAAO,CAAEb,OAAME,eAAcG,0BAAyBU,aAnCjC,WACnBR,IACIK,KACFb,KAgCgEiB,UA5BlD,SAAC3G,EAAWf,GAC5B2G,GAAQ,SAACD,GACP,IAAMiB,EAAO,gBAAQjB,GAErB,OADAiB,EAAQ5G,GAAa,CAAEmC,SAAS,EAAMlD,SAC/B2H,Q,oBC9BAC,GAAU,SAACC,GACtB,MAAwBxJ,mBAAS,IAAjC,mBAAOyJ,EAAP,KAAaC,EAAb,KAEAxI,qBAAU,WACRwI,EAAQC,KAAOH,GAAMjI,cACpB,IAMH,MAAO,CAAEkI,OAAMG,cAJO,SAACJ,GACrB,OAAOG,KAAOH,GAAMjI,YAGQmI,Y,SCZnBG,GAAO9F,KAAOC,IAAV,gJAQJiE,GAAUlE,KAAOC,IAAV,kKASPkE,GAASnE,KAAOC,IAAV,+CAIN8F,GAAO/F,KAAOC,IAAV,0JC0BF6F,GA1CF,WAAO,IAAD,IACjB,EAA+B1B,KAAvBE,EAAR,EAAQA,KAAME,EAAd,EAAcA,aACd,EAAyCgB,GAAO,UAAClB,EAAKmB,YAAN,aAAC,EAAW7H,OAApD8H,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,cAQvB,OANA1I,qBAAU,WAAO,IAAD,EACQ,GAAtB,UAAImH,EAAKmB,YAAT,aAAI,EAAW7H,QACb+H,EAAQE,EAAa,UAACvB,EAAKmB,YAAN,aAAC,EAAW7H,UAElC,WAAC0G,EAAKmB,YAAN,aAAC,EAAW7H,QAGb,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC+D,EAAA,EAAD,CAAM9D,KAAK,OAAOC,MAAI,EAAtB,oBAIF,eAAC,GAAD,WACE,cAAC6C,GAAA,EAAD,cACEhC,UAAU,OACVC,QAASC,IAAUC,SACnBd,SAAUwG,EACVzF,MAAO,OACPC,WAAS,EACTC,KAAM,IACFqF,EAAKmB,OAEX,cAAC9E,GAAA,EAAD,CACEhC,UAAU,OACVC,QAASC,IAAUC,SACnBd,SAAUwG,EACVzF,MAAO,OACPK,UAAQ,EACRxB,MAAO8H,a,SCvCNM,GAAYhG,KAAOC,IAAV,6KAKP,qBAAGgG,SC4OHD,GA5OG,SAAC,GASZ,IAAD,QARJE,EAQI,EARJA,aAQI,IAPJD,aAOI,MAPI,QAOJ,MANJE,gBAMI,MANO,GAMP,EALJC,EAKI,EALJA,OAKI,IAJJ1F,aAII,MAJI,EAIJ,EAHJG,EAGI,EAHJA,QACAwF,EAEI,EAFJA,WACAC,EACI,EADJA,aAEA,EAAsCrK,oBAAS,GAA/C,mBAAOsK,EAAP,KAAoBC,EAApB,KACA,EAAkDvK,mBAAS,IAA3D,mBAAOwK,EAAP,KAA0BC,EAA1B,KACA,EAAmEtC,KAA3DE,EAAR,EAAQA,KAAME,EAAd,EAAcA,aAAcG,EAA5B,EAA4BA,wBAAyBW,EAArD,EAAqDA,UACrD,EAAyCE,GAAQ,GAAD,iBAC3ClB,EAAKqC,aADsC,aAC3C,EAAY/I,OAD+B,iBACvB0G,EAAKsC,aADkB,aACvB,EAAYhJ,OADW,iBAE5C0G,EAAKmB,YAFuC,aAE5C,EAAW7H,OAFiC,OAG3CsI,GAH2C,OAG5BW,KAAKC,UAAUL,KAH3Bf,EAAR,EAAQA,KAAMG,EAAd,EAAcA,cAAeF,EAA7B,EAA6BA,QAM7BxI,qBAAU,WACRiJ,GAAUA,EAAOV,EAAKlI,WAAYkD,GAClCqG,MACC,CAACrB,IAEJvI,qBAAU,WACW,IAAD,MAAd+I,GACFP,EACEE,EAAc,GAAD,iBACRvB,EAAKqC,aADG,aACR,EAAY/I,OADJ,iBACY0G,EAAKsC,aADjB,aACY,EAAYhJ,OADxB,iBAET0G,EAAKmB,YAFI,aAET,EAAW7H,OAFF,OAGRsI,GAHQ,OAGOW,KAAKC,UAAUL,QAItC,CAACP,IAEJ,IAAMa,EAAe,WAEjBrB,EAAKsB,UAAU,EAAGnI,IAASoI,cAAgBC,MAAMrI,IAASoI,WAAa,GAAGE,KAAK,GAE/EX,GAAe,GAEfA,GAAe,IA6BnB,IAqCMY,EAA0B,SAAC5F,GAAO,IAAD,MACrCkF,GAAqB,SAACrD,GACpB,OAAO,6BAAKA,GAAZ,mBAAqB7B,EAAE7C,UAAY6C,EAAE5D,WAEvC+H,EACEE,EAAc,GAAD,iBACRvB,EAAKqC,aADG,aACR,EAAY/I,OADJ,iBACY0G,EAAKsC,aADjB,aACY,EAAYhJ,OADxB,iBAET0G,EAAKmB,YAFI,aAET,EAAW7H,OAFF,OAGRsI,GAHQ,OAGOW,KAAKC,UAAL,6BACbL,GADa,mBAEfjF,EAAE7C,UAAY6C,EAAE5D,YAIvB4G,EAAahD,IAGT6F,EAAgC,SAAC7F,GACf,IAAD,MAAhBoD,MAAMpD,EAAE5D,SACX8I,GAAqB,SAACrD,GACpB,OAAO,6BAAKA,GAAZ,mBAAqB7B,EAAE7C,UAAY6C,EAAE5D,WAEvC+H,EACEE,EAAc,GAAD,iBACRvB,EAAKqC,aADG,aACR,EAAY/I,OADJ,iBACY0G,EAAKsC,aADjB,aACY,EAAYhJ,OADxB,iBAET0G,EAAKmB,YAFI,aAET,EAAW7H,OAFF,OAGRsI,GAHQ,OAGOW,KAAKC,UAAL,6BACbL,GADa,mBAEfjF,EAAE7C,UAAY6C,EAAE5D,YAIvB+G,EAAwBnD,KAI5B,OACE,eAAC,GAAD,CAAayE,MAAOA,EAApB,UACE,cAACtF,GAAA,EAAD,CACEhC,UAAU,QACVC,QAASC,IAAUC,SACnBd,SAlEoB,SAACwD,GAAO,IAAD,IACzB5D,EAAQ4D,EAAE5D,MACZgH,MAAMhH,KACV+H,EACEE,EAAc,GAAD,OACRjI,GADQ,iBACA0G,EAAKsC,aADL,aACA,EAAYhJ,OADZ,iBACoB0G,EAAKmB,YADzB,aACoB,EAAW7H,OAD/B,OACuCsI,GADvC,OACsDW,KAAKC,UACpEL,MAIN9B,EAAwBnD,KAyDpBzC,MAAO,QACPnB,OAAO,UAAA0G,EAAKqC,aAAL,eAAY/I,QAAS8C,EAAQ,EACpCI,QAASyF,EACT1F,QAASA,IAEX,cAACF,GAAA,EAAD,2BACEhC,UAAU,QACVC,QAASC,IAAUC,SACnBd,SAvFoB,SAACwD,GAAO,IAAD,IACzB5D,EAAQ4D,EAAE5D,MAChB+H,EACEE,EAAc,GAAD,iBACRvB,EAAKqC,aADG,aACR,EAAY/I,OADJ,OACYA,GADZ,iBACoB0G,EAAKmB,YADzB,aACoB,EAAW7H,OAD/B,OACuCsI,GADvC,OACsDW,KAAKC,UACpEL,MAINjC,EAAahD,IA+ETzC,MAAO,SACHuF,EAAKsC,OALX,IAME9F,QAASyF,EACT1F,QAASA,MAEE,OAAZyF,QAAY,IAAZA,OAAA,EAAAA,EAAcjF,QACbiF,EAAa9F,KAAI,WAAuBE,GAAW,IAAD,YAA9B4G,EAA8B,EAA9BA,OAAQhK,EAAsB,EAAtBA,KAAMiK,EAAgB,EAAhBA,GAChC,OACE,sBAAiB3D,MAAO,CAAE4D,QAAS,OAAQC,IAAK,OAAhD,UACE,cAAC9G,GAAA,EAAD,CACEhC,UAAS,iBAAY+B,GACrB9B,QAASC,IAAUC,SACnBd,SAAUqJ,EACVtI,MAAO,IACPnB,MAAK,oBAAE0G,EAAK,UAAD,OAAW5D,WAAjB,aAAE,EAAyB9C,aAA3B,QAAoC0J,EACzCxG,QAASyF,EACT1F,QAASA,IAEX,cAACF,GAAA,EAAD,CACEhC,UAAS,eAAU+B,GACnB9B,QAASC,IAAUC,SACnBd,SAAUoJ,EACVrI,MAAO,OACPnB,MAAK,oBAAE0G,EAAK,QAAD,OAAS5D,WAAf,aAAE,EAAuB9C,aAAzB,QAAkCN,EACvCwD,QAASyF,EACT1F,QAASA,IAEX,cAACF,GAAA,EAAD,CACEhC,UAAS,aAAQ+B,GACjB9B,QAASC,IAAUC,SACnBd,SAAUoJ,EACVrI,MAAO,KACPnB,MAAK,oBAAE0G,EAAK,MAAD,OAAO5D,WAAb,aAAE,EAAqB9C,aAAvB,QAAgC2J,EACrCzG,QAASyF,EACT1F,QAASA,MA1BHH,MAgCd,cAACC,GAAA,EAAD,2BACEhC,UAAU,OACVC,QAASC,IAAUC,SACnBd,SA1GiB,SAACwD,GAAO,IAAD,IACxB5D,EAAQ4D,EAAE5D,MAChB+H,EACEE,EAAc,GAAD,iBACRvB,EAAKqC,aADG,aACR,EAAY/I,OADJ,iBACY0G,EAAKsC,aADjB,aACY,EAAYhJ,OADxB,OACgCA,GADhC,OACwCsI,GADxC,OACuDW,KAAKC,UACrEL,MAINjC,EAAahD,IAkGPzC,MAAO,OACPC,WAAS,EACTC,KAAMkH,GACF7B,EAAKmB,MAPX,IAQE3E,QAASyF,EACT1F,QAASA,KAGZqF,GACC,cAACvF,GAAA,EAAD,CACE/B,QAASC,IAAUC,SACnBd,SAAUwG,EACVzF,MAAO,WACPK,UAAQ,EACRxB,MAAOsI,EACPpF,QAASyF,EACT1F,QAASA,IAGb,cAACF,GAAA,EAAD,CACE/B,QAASC,IAAUC,SACnBd,SAAUwG,EACVzF,MAAO,OACPK,UAAQ,EACRxB,MAAO8H,EACP5E,QAASyF,EACT1F,QAASA,IAEX,cAAC6G,GAAA,EAAD,CAAQ3I,MAAM,OAAOG,QAzLzB,WACE,IAAIyI,EAAajC,EACjB,GACEiC,EAAWX,UAAU,EAAGnI,IAASoI,cACjCC,MAAMrI,IAASoI,WAAa,GAAGE,KAAK,GAFtC,CAMA,IADA,IAAIP,EAAQ,EAEVe,EAAWX,UAAU,EAAGnI,IAASoI,cAC/BC,MAAMrI,IAASoI,WAAa,GAAGE,KAAK,IACtCP,EAAQ/H,IAAS+I,UACjB,CAAC,IAAD,IACAhB,IACAe,EAAa9B,EAAc,GAAD,QACrB,UAAAvB,EAAKqC,aAAL,eAAY/I,QAAS8C,EAAQ,GADR,OACYwF,GADZ,iBAEtB5B,EAAKmB,YAFiB,aAEtB,EAAW7H,OAFW,OAGrBgJ,GAHqB,OAGbV,GAHa,OAGEW,KAAKC,UAAUL,KAG7CJ,GAAW,GACXf,EAAU,QAASsB,GACnBjB,EAAQgC,KAmK8BxI,MAAO,UAAWP,QAAQ,iBC5OvDiJ,GAAQ7H,KAAOC,IAAV,gJAQLiE,GAAUlE,KAAOC,IAAV,kKASPkE,GAASnE,KAAOC,IAAV,+CCGJ6H,GAjBI,WACjB,MAA8B7L,oBAAS,GAAvC,mBAAO4E,EAAP,KAAgBwF,EAAhB,KAEA,OACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC1E,EAAA,EAAD,CAAM9D,KAAK,OAAOC,MAAI,EAAtB,qBAIF,cAAC,GAAD,CAAW+C,QAASA,EAASwF,WAAYA,U,UCdpC0B,GAAiB/H,KAAOC,IAAV,uMCqCrB+H,GAAgB,CACpB,CAAE9B,aAAc,oEAChB,CAAEA,aAAc,KAChB,CAAEA,aAAc,KAChB,CAAEA,aAAc,KAChB,CAAEA,aAAc,MAGH6B,GA3CQ,SAAC,GAAgC,IAA9B5B,EAA6B,EAA7BA,SAAUG,EAAmB,EAAnBA,aAClC,EAA8BrK,oBAAS,GAAvC,mBAAO4E,EAAP,KAAgBwF,EAAhB,KACA,EAA4BpK,mBAAS+L,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAmB1D,uBAAY,SAACiB,EAAMhF,GACtCA,GAASuH,EAAO5G,OAAS,GAC3B6G,GAAU,SAACD,GACT,IAAMG,EAAS,aAAOH,GAEtB,OADAG,EAAU1H,EAAQ,GAAK,CAAEwF,aAAcR,GAChC0C,OAGV,IAEH,OACE,cAAC,GAAD,UACGH,EAAOzH,KAAI,WAAmBE,GAAW,IAA3BwF,EAA0B,EAA1BA,aACb,OACE,cAAC,GAAD,CAEEA,aAAcA,EACdE,OAAQ+B,EACRzH,MAAOA,EACPuF,MAAM,QACNE,SAAUA,EACVtF,QAASA,EACTwF,WAAYA,EACZC,aAAcA,GAAgBA,EAAa5F,IARtCA,SCrBJ2H,GAAarI,KAAOC,IAAV,gJAQViE,GAAUlE,KAAOC,IAAV,kKASPkE,GAASnE,KAAOC,IAAV,+CCCJoI,GAfI,WACjB,OACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC1G,EAAA,EAAD,CAAM9D,KAAK,OAAOC,MAAI,EAAtB,0BAIF,cAAC,GAAD,CAAgBqI,SAAU,WCZrBmC,GAActI,KAAOC,IAAV,gJAQXiE,GAAUlE,KAAOC,IAAV,kKASPkE,GAASnE,KAAOC,IAAV,+CAcNsI,IAVSvI,KAAOC,IAAV,uMAUQD,KAAOC,IAAV,yFCTTqI,GAnBK,WAClB,OACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC3G,EAAA,EAAD,CAAM9D,KAAK,OAAOC,MAAI,EAAtB,2BAIF,eAAC,GAAD,WACE,cAAC,GAAD,CAAgBqI,SAAU,IAC1B,cAAC,GAAD,CAAgBA,SAAU,IAC1B,cAAC,GAAD,CAAgBA,SAAU,aCfvBqC,GAAOxI,KAAOC,IAAV,gJAQJiE,GAAUlE,KAAOC,IAAV,kKASPkE,GAASnE,KAAOC,IAAV,+CAINwI,GAAUzI,KAAOC,IAAV,sIAQPyI,GAAa1I,KAAOC,IAAV,6DAKV0I,GAAY3I,KAAOC,IAAV,2BCgBPuI,GA5CF,WACX,MACElM,qBAAWC,KADLC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UAAWmM,EAA/B,EAA+BA,kBAAmBlM,EAAlD,EAAkDA,uBAGlD,OACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAACiF,EAAA,EAAD,CAAM9D,KAAK,OAAOC,MAAI,EAAtB,0CAIF,eAAC,GAAD,WACE,eAAC,GAAD,WACE,cAAC6C,GAAA,EAAD,CACEhC,UAAU,aACVC,QAASC,IAAUC,SACnBd,SAAUtB,EACVqC,MAAO,cACPnB,MAAOpB,IAET,cAACkL,GAAA,EAAD,CACE3I,MAAM,SACNG,QAAS0J,EACTzJ,MAAO,UACPP,QAAQ,gBAGZ,cAAC,GAAD,UACE,cAAC+B,GAAA,EAAD,CACEhC,UAAU,YACVC,QAASC,IAAUC,SACnBd,SAAU,aACVe,MAAO,aACPnB,MAAOnB,EACP2C,UAAQ,e,UCzCTyJ,GAAS7I,KAAOC,IAAV,gJAQNiE,GAAUlE,KAAOC,IAAV,kKASPkE,GAASnE,KAAOC,IAAV,+CAcNsI,IAVSvI,KAAOC,IAAV,uMAUQD,KAAOC,IAAV,yFCGT4I,GA/BA,WAab,OACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAClH,EAAA,EAAD,CAAM9D,KAAK,OAAOC,MAAI,EAAtB,sBAIF,eAAC,GAAD,WACE,cAAC,GAAD,CAAgBqI,SAAU,EAAGG,aArBhB,CACnB,CACE,CAAEgB,OAAQ,GAAIhK,KAAM,OAAQiK,GAAI,OAChC,CAAED,OAAQ,GAAIhK,KAAM,QAASiK,GAAI,WACjC,CAAED,OAAQ,GAAIhK,KAAM,OAAQiK,GAAI,UAElC,CACE,CAAED,OAAQ,GAAIhK,KAAM,aAAciK,GAAI,UACtC,CAAED,OAAQ,GAAIhK,KAAM,UAAWiK,GAAI,WAc/B,cAAC,GAAD,CAAgBpB,SAAU,IAC1B,cAAC,GAAD,CAAgBA,SAAU,aCCrB2C,GAtBG,WAChB,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAMpK,IAASqK,KAAMC,UAAWC,KAC7C,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMpK,IAAS6G,KAAMyD,UAAWC,KAC7C,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMpK,IAASmG,KAAMmE,UAAWC,KAC7C,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMpK,IAAS8H,MAAOwC,UAAWC,KAC9C,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMpK,IAASwK,OAAQF,UAAWC,KAC/C,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMpK,IAASyK,WAAYH,UAAWC,OACnD,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMpK,IAAS0K,WAAYJ,UAAWC,KACnD,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMpK,IAAS2K,YAAaL,UAAWC,gBClBhEK,IAASC,OAAO,cAAC,GAAD,IAAeC,SAASC,cAAc,W,8SCFzC5N,EAAagE,IAAOC,IAAV,+IAQViE,EAAUlE,IAAOC,IAAV,iKASPkE,EAASnE,IAAOC,IAAV,8CAIN4J,EAAmB7J,IAAOC,IAAV,uHAOhB6J,EAAa9J,IAAOC,IAAV,8EAKVvB,EAAcsB,IAAOC,IAAV,oHAOXR,EAAgBO,IAAOC,IAAV,qH,kGCjBXyH,EArBA,SAAC,GAOT,IANL3I,EAMI,EANJA,MAMI,IALJI,aAKI,MALIN,IAASkL,QAKb,EAJJ3K,EAII,EAJJA,SAII,IAHJvB,YAGI,MAHGgB,IAAOmL,OAGV,MAFJpL,eAEI,MAFMC,IAAUqC,SAEhB,EADJhC,EACI,EADJA,QAEA,OACE,cAAC,IAAD,CACEA,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVvB,KAAMA,EACNe,QAASA,EALX,SAOGG,M,+ICjBMgK,EAAsB,SAAC,GAAkB,IAAhBlH,EAAe,EAAfA,SAC9BjF,EAAKqN,iBAAO,IAAIC,IAAGtN,GAAG,cAC5B,EAAoCX,mBAAS,IAA7C,mBAAOO,EAAP,KAAmB2N,EAAnB,KACA,EAAkClO,mBAAS,IAA3C,mBAAOQ,EAAP,KAAkB2N,EAAlB,KAuBA,OACE,cAAC7N,EAAY8N,SAAb,CACEzM,MAAO,CACLhB,GAAIA,EAAG0N,QACP9N,aACAC,YACAmM,kBA3BoB,WACxB,IAAMpK,EAAM5B,EAAG0N,QAAQC,aACvBJ,EAAc3L,EAAIgM,WAAW,QAC7BJ,EAAa5L,EAAIiM,UAAU,SAyBvB/N,uBAtByB,SAAC,GAAe,IAAbkB,EAAY,EAAZA,MAChC,GAAIA,EAAO,CAAC,IAAD,EACHnB,EAAS,UAAGG,EAAG0N,QAAQ7M,eAAeG,UAA7B,aAAG,EAAkC6M,UAAU,OAC9DN,EAAcvM,GACdwM,EAAa3N,QAEb0N,EAAc,IACdC,EAAa,KAgBXzN,sBAZwB,SAAC,GAAe,IAAbiB,EAAY,EAAZA,MAC/BwM,EAAaxM,KAIb,SAUGiE,KAKMtF,EAAcmO,wBAAc,CAAElO,WAAY,GAAIC,UAAW,M,+BC7CtE,0KAAO,IAAMkO,EAAO,CAClBxJ,MAAO,QACP6I,OAAQ,SACRY,MAAO,SAGIC,EAAU,CACrBC,KAAM,OACNtL,OAAQ,SACRV,SAAU,WACVoC,SAAU,WACV6J,UAAW,aAGAC,EAAS,CACpBjB,QAAS,UACTkB,QAAS,UACTxI,QAAS,UACTyI,UAAW,aAGAC,EAAS,CACpBjC,KAAM,IACNxD,KAAM,QACNV,KAAM,QACN2B,MAAO,SACP0C,OAAQ,UACRC,WAAY,cACZC,WAAY,cACZC,YAAa,gBAGF4B,EAAS,CACpBnE,WAAY,EACZW,SAAU,O","file":"static/js/main.2a862122.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { SHA256, enc } from \"crypto-js\";\r\nimport Text from \"components/Text\";\r\nimport Tabs from \"components/Tabs\";\r\nimport SignMessage from \"./SignMessage\";\r\nimport VerifyMessage from \"./VerifyMessage\";\r\nimport { KeysContext } from \"contexts/KeysContextProvider\";\r\nimport * as S from \"./style\";\r\n\r\nconst Signatures = () => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n  const { privateKey, publicKey, handlePrivateKeyChange, handlePublicKeyChange, ec } =\r\n    useContext(KeysContext);\r\n  const [signature, setSignature] = useState(\"\");\r\n  const [visibleSection, setVisibleSection] = useState(SECTIONS.sign);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n\r\n  useEffect(() => {\r\n    activeTab === 1\r\n      ? setVisibleSection(SECTIONS.verify)\r\n      : setVisibleSection(SECTIONS.sign);\r\n  }, [activeTab]);\r\n\r\n  const sign = () => {\r\n    if (privateKey) {\r\n      const binaryMessage = Buffer.from(SHA256(message).toString()).toString(\"hex\");\r\n      setSignature(\r\n        Buffer.from(\r\n          ec.sign(binaryMessage, ec.keyFromPrivate(privateKey)).toDER()\r\n        ).toString(\"hex\")\r\n      );\r\n    }\r\n  };\r\n\r\n  const verify = () => {\r\n    if (publicKey) {\r\n      const key = ec.keyFromPublic(publicKey, \"hex\");\r\n      const binaryMessage = Buffer.from(SHA256(message).toString()).toString(\"hex\");\r\n      setIsVerified(key.verify(binaryMessage, signature));\r\n    }\r\n  };\r\n\r\n  const handleMessageChange = ({ value }) => {\r\n    setMessage(value);\r\n  };\r\n\r\n  const handleTabChange = (newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <S.Signatures>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Signatures\r\n          </Text>\r\n        </S.Header>\r\n        <S.SignatureContent>\r\n          <S.Navigation>\r\n            <Tabs\r\n              items={[\"Sign\", \"Verify\"]}\r\n              activeTab={activeTab}\r\n              onChange={handleTabChange}\r\n            />\r\n          </S.Navigation>\r\n          {visibleSection === SECTIONS.sign ? (\r\n            <SignMessage\r\n              message={message}\r\n              privateKey={privateKey}\r\n              messageSignature={signature}\r\n              onMessageChange={handleMessageChange}\r\n              onPrivateKeyChange={handlePrivateKeyChange}\r\n              onSignClick={sign}\r\n            />\r\n          ) : (\r\n            <VerifyMessage\r\n              message={message}\r\n              publicKey={publicKey}\r\n              messageSignature={signature}\r\n              onMessageChange={handleMessageChange}\r\n              onPublicKeyChange={handlePublicKeyChange}\r\n              onSignClick={sign}\r\n              onVerifyClick={verify}\r\n              isVerified={isVerified}\r\n            />\r\n          )}\r\n        </S.SignatureContent>\r\n      </S.Content>\r\n    </S.Signatures>\r\n  );\r\n};\r\n\r\nconst SECTIONS = {\r\n  sign: \"sign\",\r\n  verify: \"verify\",\r\n};\r\n\r\nexport default Signatures;\r\n","import React from \"react\";\r\nimport TextInput from \"components/TextInput\";\r\nimport Button from \"components/Button\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst SignMessage = ({\r\n  message,\r\n  privateKey,\r\n  messageSignature,\r\n  onMessageChange,\r\n  onPrivateKeyChange,\r\n  onSignClick,\r\n}) => {\r\n  return (\r\n    <S.SignMessage>\r\n      <TextInput\r\n        fieldName=\"message\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={onMessageChange}\r\n        label={\"Message\"}\r\n        multiline\r\n        rows={12}\r\n        value={message}\r\n      />\r\n      <TextInput\r\n        fieldName=\"privateKey\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={onPrivateKeyChange}\r\n        label={\"Private Key\"}\r\n        value={privateKey}\r\n      />\r\n      <Button label=\"Sign\" onClick={onSignClick} color={\"primary\"} variant=\"outlined\" />\r\n      <TextInput\r\n        fieldName=\"messageSignature\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={() => {}}\r\n        label={\"Message Signature\"}\r\n        value={messageSignature}\r\n        disabled\r\n      />\r\n    </S.SignMessage>\r\n  );\r\n};\r\n\r\nexport default SignMessage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport TextInput from \"components/TextInput\";\r\nimport Button from \"components/Button\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant={C.VARIANT.filled} {...props} />;\r\n};\r\n\r\nconst VerifyMessage = ({\r\n  message,\r\n  publicKey,\r\n  messageSignature,\r\n  onMessageChange,\r\n  onPublicKeyChange,\r\n  onVerifyClick,\r\n  isVerified,\r\n}) => {\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\r\n\r\n  const handleVerifyClick = () => {\r\n    setIsSnackbarOpen(true);\r\n    onVerifyClick();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsSnackbarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <S.VerifyMessage>\r\n      <TextInput\r\n        fieldName=\"message\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={onMessageChange}\r\n        label={\"Message\"}\r\n        multiline\r\n        rows={12}\r\n        value={message}\r\n      />\r\n      <TextInput\r\n        fieldName=\"publicKey\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={onPublicKeyChange}\r\n        label={\"Public Key\"}\r\n        value={publicKey}\r\n      />\r\n      <TextInput\r\n        fieldName=\"signature\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={() => {}}\r\n        label={\"Signature\"}\r\n        value={messageSignature}\r\n      />\r\n      <Button\r\n        label=\"Verify\"\r\n        onClick={handleVerifyClick}\r\n        color={\"primary\"}\r\n        variant=\"outlined\"\r\n      />\r\n      <Snackbar open={isSnackbarOpen} autoHideDuration={2000} onClose={handleClose}>\r\n        <Alert severity={isVerified ? \"success\" : \"error\"}>\r\n          {isVerified\r\n            ? \"The message has been verified successfully\"\r\n            : \"The message is not verified\"}\r\n        </Alert>\r\n      </Snackbar>\r\n    </S.VerifyMessage>\r\n  );\r\n};\r\n\r\nexport default VerifyMessage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Tabs = styled.div``;\r\n","import React from \"react\";\r\nimport { Tabs as MuiTabs } from \"@material-ui/core\";\r\nimport { Tab as MuiTab } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Tabs = ({ items, onChange, activeTab }) => {\r\n  const handleChange = (_e, newValue) => {\r\n    onChange(newValue);\r\n  };\r\n\r\n  return (\r\n    <MuiTabs\r\n      value={activeTab}\r\n      onChange={handleChange}\r\n      aria-label=\"Navigation\"\r\n      indicatorColor=\"primary\"\r\n      textColor=\"primary\"\r\n      variant=\"scrollable\"\r\n      scrollButtons=\"auto\"\r\n    >\r\n      {items.map((item, index) => {\r\n        return <MuiTab key={index} label={item} index={index} />;\r\n      })}\r\n    </MuiTabs>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport * as C from \"constant\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst TextInput = ({\r\n  rows,\r\n  type,\r\n  label,\r\n  isDirty,\r\n  isValid,\r\n  required,\r\n  disabled,\r\n  onChange,\r\n  multiline,\r\n  fieldName,\r\n  value = \"\",\r\n  placeholder,\r\n  autoFocus = false,\r\n  variant = C.VARIANT.standard,\r\n  size = C.SIZE.small,\r\n}) => {\r\n  useEffect(() => {\r\n    onChange({ fieldName, value: value, isValid: validate(value) });\r\n  }, []);\r\n\r\n  const validate = (value) => {\r\n    return value?.length > 0;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const isValid = validate(value);\r\n    onChange({ fieldName, value, isValid });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      type={type}\r\n      size={size}\r\n      rows={rows}\r\n      label={label}\r\n      value={value}\r\n      variant={variant}\r\n      required={required}\r\n      disabled={disabled}\r\n      autoFocus={autoFocus}\r\n      multiline={multiline}\r\n      onChange={handleChange}\r\n      placeholder={placeholder}\r\n      error={!disabled && isDirty && !isValid}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Text = styled.span`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport * as C from \"constant\";\r\n\r\nconst NavBar = () => {\r\n  const history = useHistory();\r\n  const [value, setValue] = useState(0);\r\n  const match = useRouteMatch(\"/:page\");\r\n\r\n  useEffect(() => {\r\n    navigateToInitialTab();\r\n  }, [match]);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    const page = _e.target?.textContent?.toLowerCase();\r\n    history.push(C.ROUTES[page]);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const navigateToInitialTab = () => {\r\n    if (match) {\r\n      const page = match.params.page;\r\n      const pageIndex = TABS.findIndex(\r\n        (tab) => tab?.toLowerCase() === page?.toLowerCase()\r\n      );\r\n      setValue(pageIndex || 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n      >\r\n        {TABS.map((tab, index) => {\r\n          return <Tab key={index} label={tab} index={index} />;\r\n        })}\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst TABS = [\r\n  \"Home\",\r\n  \"Hash\",\r\n  \"Block\",\r\n  \"Blockchain\",\r\n  \"Distributed\",\r\n  \"Tokens\",\r\n  \"Coinbase\",\r\n  \"Keys\",\r\n  \"Signatures\",\r\n  \"Transaction\",\r\n];\r\n\r\nexport default NavBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Blockchain Demo\r\n          </Text>\r\n        </S.Header>\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useForm = (submit) => {\r\n  const [form, setForm] = useState({});\r\n\r\n  const handleChange = useCallback(({ fieldName, value, isValid }) => {\r\n    setForm((currentForm) => {\r\n      return {\r\n        ...currentForm,\r\n        [fieldName]: { ...currentForm[fieldName], value, isValid },\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const handleNumberFieldChange = useCallback(({ fieldName, value, isValid }) => {\r\n    if (isNaN(value)) {\r\n      return;\r\n    } else {\r\n      handleChange({ fieldName, value, isValid });\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    applyDirtyForm();\r\n    if (isValidForm()) {\r\n      submit();\r\n    }\r\n  };\r\n\r\n  const editEntry = (fieldName, value) => {\r\n    setForm((form) => {\r\n      const tmpForm = { ...form };\r\n      tmpForm[fieldName] = { isValid: true, value };\r\n      return tmpForm;\r\n    });\r\n  };\r\n\r\n  const applyDirtyForm = () => {\r\n    setForm((currentForm) => {\r\n      const dirtyForm = {};\r\n      Object.keys(currentForm).forEach((key) => {\r\n        dirtyForm[key] = { ...currentForm[key], isDirty: true };\r\n      });\r\n      return dirtyForm;\r\n    });\r\n  };\r\n\r\n  const isValidForm = () => {\r\n    let tmpIsValid = true;\r\n    Object.values(form).forEach(({ isValid }) => {\r\n      if (!isValid) {\r\n        tmpIsValid = false;\r\n      }\r\n    });\r\n    return tmpIsValid;\r\n  };\r\n\r\n  return { form, handleChange, handleNumberFieldChange, handleSubmit, editEntry };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport sha256 from \"crypto-js/sha256\";\r\n\r\nexport const useHash = (data) => {\r\n  const [hash, setHash] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setHash(sha256(data).toString());\r\n  }, []);\r\n\r\n  const calculateHash = (data) => {\r\n    return sha256(data).toString();\r\n  };\r\n\r\n  return { hash, calculateHash, setHash };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Hash = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 20px;\r\n  gap: 25px;\r\n  max-width: 650px;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useForm, useHash } from \"hooks\";\r\nimport Text from \"components/Text\";\r\nimport TextInput from \"components/TextInput\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst Hash = () => {\r\n  const { form, handleChange } = useForm();\r\n  const { hash, setHash, calculateHash } = useHash(form.data?.value);\r\n\r\n  useEffect(() => {\r\n    if (form.data?.value) {\r\n      setHash(calculateHash(form.data?.value));\r\n    }\r\n  }, [form.data?.value]);\r\n\r\n  return (\r\n    <S.Hash>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Hash\r\n          </Text>\r\n        </S.Header>\r\n        <S.Form>\r\n          <TextInput\r\n            fieldName=\"data\"\r\n            variant={C.VARIANT.outlined}\r\n            onChange={handleChange}\r\n            label={\"Data\"}\r\n            multiline\r\n            rows={12}\r\n            {...form.data}\r\n          />\r\n          <TextInput\r\n            fieldName=\"hash\"\r\n            variant={C.VARIANT.outlined}\r\n            onChange={handleChange}\r\n            label={\"Hash\"}\r\n            disabled\r\n            value={hash}\r\n          />\r\n        </S.Form>\r\n      </S.Content>\r\n    </S.Hash>\r\n  );\r\n};\r\n\r\nexport default Hash;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BlockForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 20px;\r\n  gap: 10px;\r\n  max-width: ${({ width }) => width};\r\n  min-width: 250px;\r\n  width: 100%;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm, useHash } from \"hooks\";\r\nimport TextInput from \"components/TextInput\";\r\nimport Button from \"components/Button\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst BlockForm = ({\r\n  previousHash,\r\n  width = \"650px\",\r\n  dataRows = 12,\r\n  onHash,\r\n  index = 0,\r\n  isDirty,\r\n  setIsDirty,\r\n  transactions,\r\n}) => {\r\n  const [isValidHash, setIsValidHash] = useState(false);\r\n  const [transactionParams, setTransactionParams] = useState({});\r\n  const { form, handleChange, handleNumberFieldChange, editEntry } = useForm();\r\n  const { hash, calculateHash, setHash } = useHash(\r\n    `${form.block?.value}${form.nonce?.value}${\r\n      form.data?.value\r\n    }${previousHash}${JSON.stringify(transactionParams)}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    onHash && onHash(hash.toString(), index);\r\n    validateHash();\r\n  }, [hash]);\r\n\r\n  useEffect(() => {\r\n    if (previousHash) {\r\n      setHash(\r\n        calculateHash(\r\n          `${form.block?.value}${form.nonce?.value}${\r\n            form.data?.value\r\n          }${previousHash}${JSON.stringify(transactionParams)}`\r\n        )\r\n      );\r\n    }\r\n  }, [previousHash]);\r\n\r\n  const validateHash = () => {\r\n    if (\r\n      hash.substring(0, C.CRYPTO.difficulty) !== Array(C.CRYPTO.difficulty + 1).join(0)\r\n    ) {\r\n      setIsValidHash(false);\r\n    } else {\r\n      setIsValidHash(true);\r\n    }\r\n  };\r\n\r\n  function mine() {\r\n    let hashString = hash;\r\n    if (\r\n      hashString.substring(0, C.CRYPTO.difficulty) ===\r\n      Array(C.CRYPTO.difficulty + 1).join(0)\r\n    )\r\n      return;\r\n    let nonce = 0;\r\n    while (\r\n      hashString.substring(0, C.CRYPTO.difficulty) !==\r\n        Array(C.CRYPTO.difficulty + 1).join(0) &&\r\n      nonce < C.CRYPTO.maxNonce\r\n    ) {\r\n      nonce++;\r\n      hashString = calculateHash(\r\n        `${form.block?.value || index + 1}${previousHash}${\r\n          form.data?.value\r\n        }${nonce}${previousHash}${JSON.stringify(transactionParams)}`\r\n      );\r\n    }\r\n    setIsDirty(true);\r\n    editEntry(\"nonce\", nonce);\r\n    setHash(hashString);\r\n  }\r\n\r\n  const handleNonceChange = (e) => {\r\n    const value = e.value;\r\n    setHash(\r\n      calculateHash(\r\n        `${form.block?.value}${value}${form.data?.value}${previousHash}${JSON.stringify(\r\n          transactionParams\r\n        )}`\r\n      )\r\n    );\r\n    handleChange(e);\r\n  };\r\n\r\n  const handleBlockChange = (e) => {\r\n    const value = e.value;\r\n    if (isNaN(value)) return;\r\n    setHash(\r\n      calculateHash(\r\n        `${value}${form.nonce?.value}${form.data?.value}${previousHash}${JSON.stringify(\r\n          transactionParams\r\n        )}`\r\n      )\r\n    );\r\n    handleNumberFieldChange(e);\r\n  };\r\n\r\n  const handleDataChange = (e) => {\r\n    const value = e.value;\r\n    setHash(\r\n      calculateHash(\r\n        `${form.block?.value}${form.nonce?.value}${value}${previousHash}${JSON.stringify(\r\n          transactionParams\r\n        )}`\r\n      )\r\n    );\r\n    handleChange(e);\r\n  };\r\n\r\n  const handleTransactionChange = (e) => {\r\n    setTransactionParams((params) => {\r\n      return { ...params, [e.fieldName]: e.value };\r\n    });\r\n    setHash(\r\n      calculateHash(\r\n        `${form.block?.value}${form.nonce?.value}${\r\n          form.data?.value\r\n        }${previousHash}${JSON.stringify({\r\n          ...transactionParams,\r\n          [e.fieldName]: e.value,\r\n        })}`\r\n      )\r\n    );\r\n    handleChange(e);\r\n  };\r\n\r\n  const handleTransactionAmountChange = (e) => {\r\n    if (!isNaN(e.value)) {\r\n      setTransactionParams((params) => {\r\n        return { ...params, [e.fieldName]: e.value };\r\n      });\r\n      setHash(\r\n        calculateHash(\r\n          `${form.block?.value}${form.nonce?.value}${\r\n            form.data?.value\r\n          }${previousHash}${JSON.stringify({\r\n            ...transactionParams,\r\n            [e.fieldName]: e.value,\r\n          })}`\r\n        )\r\n      );\r\n      handleNumberFieldChange(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.BlockForm width={width}>\r\n      <TextInput\r\n        fieldName=\"block\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={handleBlockChange}\r\n        label={\"Block\"}\r\n        value={form.block?.value || index + 1}\r\n        isValid={isValidHash}\r\n        isDirty={isDirty}\r\n      />\r\n      <TextInput\r\n        fieldName=\"nonce\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={handleNonceChange}\r\n        label={\"Nonce\"}\r\n        {...form.nonce}\r\n        isValid={isValidHash}\r\n        isDirty={isDirty}\r\n      />\r\n      {transactions?.length ? (\r\n        transactions.map(({ amount, from, to }, index) => {\r\n          return (\r\n            <div key={index} style={{ display: \"flex\", gap: \"8px\" }}>\r\n              <TextInput\r\n                fieldName={`amount_${index}`}\r\n                variant={C.VARIANT.outlined}\r\n                onChange={handleTransactionAmountChange}\r\n                label={\"$\"}\r\n                value={form[`amount_${index}`]?.value ?? amount}\r\n                isValid={isValidHash}\r\n                isDirty={isDirty}\r\n              />\r\n              <TextInput\r\n                fieldName={`from_${index}`}\r\n                variant={C.VARIANT.outlined}\r\n                onChange={handleTransactionChange}\r\n                label={\"From\"}\r\n                value={form[`from_${index}`]?.value ?? from}\r\n                isValid={isValidHash}\r\n                isDirty={isDirty}\r\n              />\r\n              <TextInput\r\n                fieldName={`to_${index}`}\r\n                variant={C.VARIANT.outlined}\r\n                onChange={handleTransactionChange}\r\n                label={\"To\"}\r\n                value={form[`to_${index}`]?.value ?? to}\r\n                isValid={isValidHash}\r\n                isDirty={isDirty}\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <TextInput\r\n          fieldName=\"data\"\r\n          variant={C.VARIANT.outlined}\r\n          onChange={handleDataChange}\r\n          label={\"Data\"}\r\n          multiline\r\n          rows={dataRows}\r\n          {...form.data}\r\n          isValid={isValidHash}\r\n          isDirty={isDirty}\r\n        />\r\n      )}\r\n      {previousHash && (\r\n        <TextInput\r\n          variant={C.VARIANT.outlined}\r\n          onChange={handleChange}\r\n          label={\"Previous\"}\r\n          disabled\r\n          value={previousHash}\r\n          isValid={isValidHash}\r\n          isDirty={isDirty}\r\n        />\r\n      )}\r\n      <TextInput\r\n        variant={C.VARIANT.outlined}\r\n        onChange={handleChange}\r\n        label={\"Hash\"}\r\n        disabled\r\n        value={hash}\r\n        isValid={isValidHash}\r\n        isDirty={isDirty}\r\n      />\r\n      <Button label=\"Mine\" onClick={mine} color={\"primary\"} variant=\"outlined\" />\r\n    </S.BlockForm>\r\n  );\r\n};\r\n\r\nexport default BlockForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Block = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport BlockForm from \"components/BlockForm\";\r\nimport * as S from \"./style\";\r\n\r\nconst BlockChain = () => {\r\n  const [isDirty, setIsDirty] = useState(false);\r\n\r\n  return (\r\n    <S.Block>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Block\r\n          </Text>\r\n        </S.Header>\r\n        <BlockForm isDirty={isDirty} setIsDirty={setIsDirty} />\r\n      </S.Content>\r\n    </S.Block>\r\n  );\r\n};\r\n\r\nexport default BlockChain;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BlockchainForm = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 50px;\r\n  width: calc(100vw - 400px);\r\n  padding: 0px 25px 25px;\r\n  overflow-x: auto;\r\n  box-sizing: border-box;\r\n`;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport BlockForm from \"components/BlockForm\";\r\nimport * as S from \"./style\";\r\n\r\nconst BlockchainForm = ({ dataRows, transactions }) => {\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [blocks, setBlocks] = useState(initialBlocks);\r\n\r\n  const handleHashChange = useCallback((hash, index) => {\r\n    if (index != blocks.length - 1) {\r\n      setBlocks((blocks) => {\r\n        const tmpBlocks = [...blocks];\r\n        tmpBlocks[index + 1] = { previousHash: hash };\r\n        return tmpBlocks;\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <S.BlockchainForm>\r\n      {blocks.map(({ previousHash }, index) => {\r\n        return (\r\n          <BlockForm\r\n            key={index}\r\n            previousHash={previousHash}\r\n            onHash={handleHashChange}\r\n            index={index}\r\n            width=\"325px\"\r\n            dataRows={dataRows}\r\n            isDirty={isDirty}\r\n            setIsDirty={setIsDirty}\r\n            transactions={transactions && transactions[index]}\r\n          />\r\n        );\r\n      })}\r\n    </S.BlockchainForm>\r\n  );\r\n};\r\n\r\nconst initialBlocks = [\r\n  { previousHash: \"0000000000000000000000000000000000000000000000000000000000000000\" },\r\n  { previousHash: \" \" },\r\n  { previousHash: \" \" },\r\n  { previousHash: \" \" },\r\n  { previousHash: \" \" },\r\n];\r\n\r\nexport default BlockchainForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Blockchain = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport BlockchainForm from \"components/BlockchainForm\";\r\nimport * as S from \"./style\";\r\n\r\nconst Blockchain = () => {\r\n  return (\r\n    <S.Blockchain>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Blockchain\r\n          </Text>\r\n        </S.Header>\r\n        <BlockchainForm dataRows={12} />\r\n      </S.Content>\r\n    </S.Blockchain>\r\n  );\r\n};\r\n\r\nexport default Blockchain;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Distributed = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Blocks = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 50px;\r\n  width: calc(100vw - 400px);\r\n  padding: 0px 25px 25px;\r\n  overflow-x: auto;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Blockchains = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport BlockchainForm from \"components/BlockchainForm\";\r\nimport * as S from \"./style\";\r\n\r\nconst Distributed = () => {\r\n  return (\r\n    <S.Distributed>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Distributed\r\n          </Text>\r\n        </S.Header>\r\n        <S.Blockchains>\r\n          <BlockchainForm dataRows={5} />\r\n          <BlockchainForm dataRows={5} />\r\n          <BlockchainForm dataRows={5} />\r\n        </S.Blockchains>\r\n      </S.Content>\r\n    </S.Distributed>\r\n  );\r\n};\r\n\r\nexport default Distributed;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Keys = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const KeyPair = styled.div`\r\n  display: flex;\r\n  margin-block-start: 50px;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  width: 600px;\r\n`;\r\n\r\nexport const PrivateKey = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const PublicKey = styled.div``;\r\n","import React, { useContext } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport TextInput from \"components/TextInput\";\r\nimport Button from \"components/Button\";\r\nimport { KeysContext } from \"contexts/KeysContextProvider\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst Keys = () => {\r\n  const { privateKey, publicKey, handleRandomClick, handlePrivateKeyChange } =\r\n    useContext(KeysContext);\r\n\r\n  return (\r\n    <S.Keys>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Public / Private Key Pairs\r\n          </Text>\r\n        </S.Header>\r\n        <S.KeyPair>\r\n          <S.PrivateKey>\r\n            <TextInput\r\n              fieldName=\"privateKey\"\r\n              variant={C.VARIANT.outlined}\r\n              onChange={handlePrivateKeyChange}\r\n              label={\"Private Key\"}\r\n              value={privateKey}\r\n            />\r\n            <Button\r\n              label=\"Random\"\r\n              onClick={handleRandomClick}\r\n              color={\"primary\"}\r\n              variant=\"outlined\"\r\n            />\r\n          </S.PrivateKey>\r\n          <S.PublicKey>\r\n            <TextInput\r\n              fieldName=\"publicKey\"\r\n              variant={C.VARIANT.outlined}\r\n              onChange={() => {}}\r\n              label={\"Public Key\"}\r\n              value={publicKey}\r\n              disabled\r\n            />\r\n          </S.PublicKey>\r\n        </S.KeyPair>\r\n      </S.Content>\r\n    </S.Keys>\r\n  );\r\n};\r\n\r\nexport default Keys;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Tokens = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Blocks = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 50px;\r\n  width: calc(100vw - 400px);\r\n  padding: 0px 25px 25px;\r\n  overflow-x: auto;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Blockchains = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport BlockchainForm from \"components/BlockchainForm\";\r\nimport * as S from \"./style\";\r\n\r\nconst Tokens = () => {\r\n  const transactions = [\r\n    [\r\n      { amount: 10, from: \"Omer\", to: \"Guy\" },\r\n      { amount: 20, from: \"James\", to: \"Abraham\" },\r\n      { amount: 30, from: \"Rick\", to: \"Morty\" },\r\n    ],\r\n    [\r\n      { amount: 40, from: \"Snow White\", to: \"Prince\" },\r\n      { amount: 50, from: \"Brenner\", to: \"Max\" },\r\n    ],\r\n  ];\r\n\r\n  return (\r\n    <S.Tokens>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Tokens\r\n          </Text>\r\n        </S.Header>\r\n        <S.Blockchains>\r\n          <BlockchainForm dataRows={5} transactions={transactions} />\r\n          <BlockchainForm dataRows={5} />\r\n          <BlockchainForm dataRows={5} />\r\n        </S.Blockchains>\r\n      </S.Content>\r\n    </S.Tokens>\r\n  );\r\n};\r\n\r\nexport default Tokens;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { KeysContextProvider } from \"contexts/KeysContextProvider\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport * as P from \"pages\";\r\nimport * as C from \"constant\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <KeysContextProvider>\r\n            <Route exact path={C.ROUTES.home} component={P.Home} />\r\n            <Route exact path={C.ROUTES.hash} component={P.Hash} />\r\n            <Route exact path={C.ROUTES.keys} component={P.Keys} />\r\n            <Route exact path={C.ROUTES.block} component={P.Block} />\r\n            <Route exact path={C.ROUTES.tokens} component={P.Tokens} />\r\n            <Route exact path={C.ROUTES.signatures} component={P.Signatures} />\r\n            <Route exact path={C.ROUTES.blockchain} component={P.Blockchain} />\r\n            <Route exact path={C.ROUTES.distributed} component={P.Distributed} />\r\n          </KeysContextProvider>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n","import styled from \"styled-components\";\r\n\r\nexport const Signatures = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const SignatureContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 25px;\r\n  width: 600px;\r\n`;\r\n\r\nexport const Navigation = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const SignMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 20px;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const VerifyMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 20px;\r\n  gap: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { Button as MuiButton } from \"@material-ui/core\";\r\nimport * as C from \"constant\";\r\n\r\nconst Button = ({\r\n  label,\r\n  color = C.COLORS.default,\r\n  disabled,\r\n  size = C.SIZE.medium,\r\n  variant = C.VARIANT.standard,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <MuiButton\r\n      onClick={onClick}\r\n      color={color}\r\n      disabled={disabled}\r\n      size={size}\r\n      variant={variant}\r\n    >\r\n      {label}\r\n    </MuiButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useRef, useState, createContext } from \"react\";\r\nimport EC from \"elliptic\";\r\n\r\nexport const KeysContextProvider = ({ children }) => {\r\n  const ec = useRef(new EC.ec(\"secp256k1\"));\r\n  const [privateKey, setPrivateKey] = useState(\"\");\r\n  const [publicKey, setPublicKey] = useState(\"\");\r\n\r\n  const handleRandomClick = () => {\r\n    const key = ec.current.genKeyPair();\r\n    setPrivateKey(key.getPrivate(\"hex\"));\r\n    setPublicKey(key.getPublic(\"hex\"));\r\n  };\r\n\r\n  const handlePrivateKeyChange = ({ value }) => {\r\n    if (value) {\r\n      const publicKey = ec.current.keyFromPrivate(value)?.getPublic(\"hex\");\r\n      setPrivateKey(value);\r\n      setPublicKey(publicKey);\r\n    } else {\r\n      setPrivateKey(\"\");\r\n      setPublicKey(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePublicKeyChange = ({ value }) => {\r\n    setPublicKey(value);\r\n  };\r\n\r\n  return (\r\n    <KeysContext.Provider\r\n      value={{\r\n        ec: ec.current,\r\n        privateKey,\r\n        publicKey,\r\n        handleRandomClick,\r\n        handlePrivateKeyChange,\r\n        handlePublicKeyChange,\r\n      }}\r\n    >\r\n      {children}\r\n    </KeysContext.Provider>\r\n  );\r\n};\r\n\r\nexport const KeysContext = createContext({ privateKey: \"\", publicKey: \"\" });\r\n","export const SIZE = {\r\n  small: \"small\",\r\n  medium: \"medium\",\r\n  large: \"large\",\r\n};\r\n\r\nexport const VARIANT = {\r\n  text: \"text\",\r\n  filled: \"filled\",\r\n  outlined: \"outlined\",\r\n  standard: \"standard\",\r\n  contained: \"contained\",\r\n};\r\n\r\nexport const COLORS = {\r\n  default: \"default\",\r\n  inherit: \"inherit\",\r\n  primary: \"primary\",\r\n  secondary: \"secondary\",\r\n};\r\n\r\nexport const ROUTES = {\r\n  home: \"/\",\r\n  hash: \"/hash\",\r\n  keys: \"/keys\",\r\n  block: \"/block\",\r\n  tokens: \"/tokens\",\r\n  signatures: \"/signatures\",\r\n  blockchain: \"/blockchain\",\r\n  distributed: \"/distributed\",\r\n};\r\n\r\nexport const CRYPTO = {\r\n  difficulty: 4,\r\n  maxNonce: 500000,\r\n};\r\n"],"sourceRoot":""}