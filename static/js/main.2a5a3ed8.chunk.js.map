{"version":3,"sources":["contexts/KeysContextProvider.js","components/Text/style.js","components/Text/Text.js","pages/Home/style.js","pages/Home/Home.js","hooks/useForm.js","hooks/useHash.js","constant.js","components/TextInput/TextInput.js","pages/Hash/style.js","pages/Hash/Hash.js","components/Button/Button.js","components/BlockForm/style.js","components/BlockForm/BlockForm.js","pages/Block/style.js","pages/Block/Block.js","components/BlockchainForm/style.js","components/BlockchainForm/BlockchainForm.js","pages/Blockchain/style.js","pages/Blockchain/Blockchain.js","pages/Distributed/style.js","pages/Distributed/Distributed.js","pages/Keys/style.js","pages/Keys/Keys.js","components/Tabs/Tabs.js","components/Tabs/style.js","pages/Signatures/style.js","pages/Signatures/SignMessage.js","pages/Signatures/VerifyMessage.js","pages/Signatures/Signatures.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["KeysContextProvider","children","ec","useRef","EC","useState","privateKey","setPrivateKey","publicKey","setPublicKey","KeysContext","Provider","value","handleRandomClick","key","current","genKeyPair","getPrivate","getPublic","handlePrivateKeyChange","keyFromPrivate","createContext","Text","styled","span","size","bold","Typography","Home","div","Content","Header","useForm","submit","form","setForm","handleChange","useCallback","fieldName","isValid","currentForm","handleNumberFieldChange","isNaN","applyDirtyForm","dirtyForm","Object","keys","forEach","isDirty","isValidForm","tmpIsValid","values","handleSubmit","editEntry","tmpForm","useHash","data","hash","setHash","useEffect","sha256","toString","calculateHash","SIZE","VARIANT","COLORS","ROUTES","home","block","blockchain","distributed","signatures","CRYPTO","TextInput","rows","type","label","required","disabled","onChange","multiline","placeholder","autoFocus","variant","C","validate","length","TextField","fullWidth","e","target","error","Hash","Form","Button","color","onClick","BlockForm","width","previousHash","dataRows","onHash","index","setIsDirty","isValidHash","setIsValidHash","nonce","validateHash","substring","Array","join","hashString","Block","BlockChain","BlockchainForm","initialBlocks","blocks","setBlocks","handleHashChange","tmpBlocks","map","Blockchain","Distributed","Blockchains","Keys","KeyPair","PrivateKey","PublicKey","useContext","Tabs","items","activeTab","_e","newValue","aria-label","indicatorColor","textColor","scrollButtons","item","Signatures","SignatureContent","Navigation","SignMessage","VerifyMessage","message","messageSignature","onMessageChange","onPrivateKeyChange","onSignClick","onPublicKeyChange","onVerifyClick","SECTIONS","sign","verify","setActiveTab","visibleSection","setVisibleSection","handleMessageChange","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","primary","main","CssBaseline","TABS","NavBar","history","useHistory","setValue","match","useRouteMatch","navigateToInitialTab","page","params","pageIndex","findIndex","tab","toLowerCase","AppBar","position","style","top","textContent","push","Tab","AppRouter","exact","path","component","blockChain","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2a5a3ed8.chunk.js","sourcesContent":["import React, { useRef, useState, createContext } from \"react\";\r\nimport EC from \"elliptic\";\r\n\r\nexport const KeysContextProvider = ({ children }) => {\r\n  const ec = useRef(new EC.ec(\"secp256k1\"));\r\n  const [privateKey, setPrivateKey] = useState(\"\");\r\n  const [publicKey, setPublicKey] = useState(\"\");\r\n\r\n  const handleRandomClick = () => {\r\n    const key = ec.current.genKeyPair();\r\n    setPrivateKey(key.getPrivate(\"hex\"));\r\n    setPublicKey(key.getPublic(\"hex\"));\r\n  };\r\n\r\n  const handlePrivateKeyChange = ({ value }) => {\r\n    if (value) {\r\n      const publicKey = ec.current.keyFromPrivate(value)?.getPublic(\"hex\");\r\n      setPrivateKey(value);\r\n      setPublicKey(publicKey);\r\n    } else {\r\n      setPrivateKey(\"\");\r\n      setPublicKey(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeysContext.Provider\r\n      value={{ privateKey, publicKey, handleRandomClick, handlePrivateKeyChange }}\r\n    >\r\n      {children}\r\n    </KeysContext.Provider>\r\n  );\r\n};\r\n\r\nexport const KeysContext = createContext({ privateKey: \"\", publicKey: \"\" });\r\n","import styled from \"styled-components\";\r\n\r\nexport const Text = styled.span`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Blockchain Demo\r\n          </Text>\r\n        </S.Header>\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useForm = (submit) => {\r\n  const [form, setForm] = useState({});\r\n\r\n  const handleChange = useCallback(({ fieldName, value, isValid }) => {\r\n    setForm((currentForm) => {\r\n      return {\r\n        ...currentForm,\r\n        [fieldName]: { ...currentForm[fieldName], value, isValid },\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const handleNumberFieldChange = useCallback(({ fieldName, value, isValid }) => {\r\n    if (isNaN(value)) {\r\n      return;\r\n    } else {\r\n      handleChange({ fieldName, value, isValid });\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    applyDirtyForm();\r\n    if (isValidForm()) {\r\n      submit();\r\n    }\r\n  };\r\n\r\n  const editEntry = (fieldName, value) => {\r\n    setForm((form) => {\r\n      const tmpForm = { ...form };\r\n      tmpForm[fieldName] = { isValid: true, value };\r\n      return tmpForm;\r\n    });\r\n  };\r\n\r\n  const applyDirtyForm = () => {\r\n    setForm((currentForm) => {\r\n      const dirtyForm = {};\r\n      Object.keys(currentForm).forEach((key) => {\r\n        dirtyForm[key] = { ...currentForm[key], isDirty: true };\r\n      });\r\n      return dirtyForm;\r\n    });\r\n  };\r\n\r\n  const isValidForm = () => {\r\n    let tmpIsValid = true;\r\n    Object.values(form).forEach(({ isValid }) => {\r\n      if (!isValid) {\r\n        tmpIsValid = false;\r\n      }\r\n    });\r\n    return tmpIsValid;\r\n  };\r\n\r\n  return { form, handleChange, handleNumberFieldChange, handleSubmit, editEntry };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport sha256 from \"crypto-js/sha256\";\r\n\r\nexport const useHash = (data) => {\r\n  const [hash, setHash] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setHash(sha256(data).toString());\r\n  }, []);\r\n\r\n  const calculateHash = (data) => {\r\n    return sha256(data).toString();\r\n  };\r\n\r\n  return { hash, calculateHash, setHash };\r\n};\r\n","export const SIZE = {\r\n  small: \"small\",\r\n  medium: \"medium\",\r\n  large: \"large\",\r\n};\r\n\r\nexport const VARIANT = {\r\n  text: \"text\",\r\n  filled: \"filled\",\r\n  outlined: \"outlined\",\r\n  standard: \"standard\",\r\n  contained: \"contained\",\r\n};\r\n\r\nexport const COLORS = {\r\n  default: \"default\",\r\n  inherit: \"inherit\",\r\n  primary: \"primary\",\r\n  secondary: \"secondary\",\r\n};\r\n\r\nexport const ROUTES = {\r\n  home: \"/\",\r\n  hash: \"/hash\",\r\n  block: \"/block\",\r\n  blockchain: \"/blockchain\",\r\n  distributed: \"/distributed\",\r\n  keys: \"/keys\",\r\n  signatures: \"/signatures\",\r\n};\r\n\r\nexport const CRYPTO = {\r\n  difficulty: 4,\r\n  maxNonce: 500000,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport * as C from \"constant\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst TextInput = ({\r\n  rows,\r\n  type,\r\n  label,\r\n  isDirty,\r\n  isValid,\r\n  required,\r\n  disabled,\r\n  onChange,\r\n  multiline,\r\n  fieldName,\r\n  value = \"\",\r\n  placeholder,\r\n  autoFocus = false,\r\n  variant = C.VARIANT.standard,\r\n  size = C.SIZE.small,\r\n}) => {\r\n  useEffect(() => {\r\n    onChange({ fieldName, value: value, isValid: validate(value) });\r\n  }, []);\r\n\r\n  const validate = (value) => {\r\n    return value?.length > 0;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const isValid = validate(value);\r\n    onChange({ fieldName, value, isValid });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      type={type}\r\n      size={size}\r\n      rows={rows}\r\n      label={label}\r\n      value={value}\r\n      variant={variant}\r\n      required={required}\r\n      disabled={disabled}\r\n      autoFocus={autoFocus}\r\n      multiline={multiline}\r\n      onChange={handleChange}\r\n      placeholder={placeholder}\r\n      error={!disabled && isDirty && !isValid}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Hash = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 20px;\r\n  gap: 25px;\r\n  max-width: 650px;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useForm, useHash } from \"hooks\";\r\nimport Text from \"components/Text\";\r\nimport TextInput from \"components/TextInput\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst Hash = () => {\r\n  const { form, handleChange } = useForm();\r\n  const { hash, setHash, calculateHash } = useHash(form.data?.value);\r\n\r\n  useEffect(() => {\r\n    if (form.data?.value) {\r\n      setHash(calculateHash(form.data?.value));\r\n    }\r\n  }, [form.data?.value]);\r\n\r\n  return (\r\n    <S.Hash>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Hash\r\n          </Text>\r\n        </S.Header>\r\n        <S.Form>\r\n          <TextInput\r\n            fieldName=\"data\"\r\n            variant={C.VARIANT.outlined}\r\n            onChange={handleChange}\r\n            label={\"Data\"}\r\n            multiline\r\n            rows={12}\r\n            {...form.data}\r\n          />\r\n          <TextInput\r\n            fieldName=\"hash\"\r\n            variant={C.VARIANT.outlined}\r\n            onChange={handleChange}\r\n            label={\"Hash\"}\r\n            disabled\r\n            value={hash}\r\n          />\r\n        </S.Form>\r\n      </S.Content>\r\n    </S.Hash>\r\n  );\r\n};\r\n\r\nexport default Hash;\r\n","import React from \"react\";\r\nimport { Button as MuiButton } from \"@material-ui/core\";\r\nimport * as C from \"constant\";\r\n\r\nconst Button = ({\r\n  label,\r\n  color = C.COLORS.default,\r\n  disabled,\r\n  size = C.SIZE.medium,\r\n  variant = C.VARIANT.standard,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <MuiButton\r\n      onClick={onClick}\r\n      color={color}\r\n      disabled={disabled}\r\n      size={size}\r\n      variant={variant}\r\n    >\r\n      {label}\r\n    </MuiButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BlockForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 20px;\r\n  gap: 10px;\r\n  max-width: ${({ width }) => width};\r\n  min-width: 250px;\r\n  width: 100%;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm, useHash } from \"hooks\";\r\nimport TextInput from \"components/TextInput\";\r\nimport Button from \"components/Button\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst BlockForm = ({\r\n  previousHash,\r\n  width = \"650px\",\r\n  dataRows = 12,\r\n  onHash,\r\n  index = 0,\r\n  isDirty,\r\n  setIsDirty,\r\n}) => {\r\n  const [isValidHash, setIsValidHash] = useState(false);\r\n  const { form, handleChange, handleNumberFieldChange, editEntry } = useForm();\r\n  const { hash, calculateHash, setHash } = useHash(\r\n    `${form.block?.value}${form.nonce?.value}${form.data?.value}${previousHash}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    onHash && onHash(hash.toString(), index);\r\n    validateHash();\r\n  }, [hash]);\r\n\r\n  useEffect(() => {\r\n    if (previousHash) {\r\n      setHash(\r\n        calculateHash(\r\n          `${form.block?.value}${form.nonce?.value}${form.data?.value}${previousHash}`\r\n        )\r\n      );\r\n    }\r\n  }, [previousHash]);\r\n\r\n  const validateHash = () => {\r\n    if (\r\n      hash.substring(0, C.CRYPTO.difficulty) !== Array(C.CRYPTO.difficulty + 1).join(0)\r\n    ) {\r\n      setIsValidHash(false);\r\n    } else {\r\n      setIsValidHash(true);\r\n    }\r\n  };\r\n\r\n  function mine() {\r\n    let hashString = hash;\r\n    if (\r\n      hashString.substring(0, C.CRYPTO.difficulty) ===\r\n      Array(C.CRYPTO.difficulty + 1).join(0)\r\n    )\r\n      return;\r\n    let nonce = 0;\r\n    while (\r\n      hashString.substring(0, C.CRYPTO.difficulty) !==\r\n        Array(C.CRYPTO.difficulty + 1).join(0) &&\r\n      nonce < C.CRYPTO.maxNonce\r\n    ) {\r\n      nonce++;\r\n      hashString = calculateHash(\r\n        `${form.block?.value || index + 1}${previousHash}${\r\n          form.data.value\r\n        }${nonce}${previousHash}`\r\n      );\r\n    }\r\n    setIsDirty(true);\r\n    editEntry(\"nonce\", nonce);\r\n    setHash(hashString);\r\n  }\r\n\r\n  const handleNonceChange = (e) => {\r\n    const value = e.value;\r\n    setHash(\r\n      calculateHash(`${form.block?.value}${value}${form.data?.value}${previousHash}`)\r\n    );\r\n    handleChange(e);\r\n  };\r\n\r\n  const handleBlockChange = (e) => {\r\n    const value = e.value;\r\n    if (isNaN(value)) return;\r\n    setHash(\r\n      calculateHash(`${value}${form.nonce?.value}${form.data?.value}${previousHash}`)\r\n    );\r\n    handleNumberFieldChange(e);\r\n  };\r\n\r\n  const handleDataChange = (e) => {\r\n    const value = e.value;\r\n    setHash(\r\n      calculateHash(`${form.block?.value}${form.nonce?.value}${value}${previousHash}`)\r\n    );\r\n    handleChange(e);\r\n  };\r\n\r\n  return (\r\n    <S.BlockForm width={width}>\r\n      <TextInput\r\n        fieldName=\"block\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={handleBlockChange}\r\n        label={\"Block\"}\r\n        value={form.block?.value || index + 1}\r\n        isValid={isValidHash}\r\n        isDirty={isDirty}\r\n      />\r\n      <TextInput\r\n        fieldName=\"nonce\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={handleNonceChange}\r\n        label={\"Nonce\"}\r\n        {...form.nonce}\r\n        isValid={isValidHash}\r\n        isDirty={isDirty}\r\n      />\r\n      <TextInput\r\n        fieldName=\"data\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={handleDataChange}\r\n        label={\"Data\"}\r\n        multiline\r\n        rows={dataRows}\r\n        {...form.data}\r\n        isValid={isValidHash}\r\n        isDirty={isDirty}\r\n      />\r\n      {previousHash && (\r\n        <TextInput\r\n          variant={C.VARIANT.outlined}\r\n          onChange={handleChange}\r\n          label={\"Previous\"}\r\n          disabled\r\n          value={previousHash}\r\n          isValid={isValidHash}\r\n          isDirty={isDirty}\r\n        />\r\n      )}\r\n      <TextInput\r\n        variant={C.VARIANT.outlined}\r\n        onChange={handleChange}\r\n        label={\"Hash\"}\r\n        disabled\r\n        value={hash}\r\n        isValid={isValidHash}\r\n        isDirty={isDirty}\r\n      />\r\n      <Button label=\"Mine\" onClick={mine} color={\"primary\"} variant=\"outlined\" />\r\n    </S.BlockForm>\r\n  );\r\n};\r\n\r\nexport default BlockForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Block = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport BlockForm from \"components/BlockForm\";\r\nimport * as S from \"./style\";\r\n\r\nconst BlockChain = () => {\r\n  const [isDirty, setIsDirty] = useState(false);\r\n\r\n  return (\r\n    <S.Block>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Block\r\n          </Text>\r\n        </S.Header>\r\n        <BlockForm isDirty={isDirty} setIsDirty={setIsDirty} />\r\n      </S.Content>\r\n    </S.Block>\r\n  );\r\n};\r\n\r\nexport default BlockChain;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BlockchainForm = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 50px;\r\n  width: calc(100vw - 400px);\r\n  padding: 0px 25px 25px;\r\n  overflow-x: auto;\r\n  box-sizing: border-box;\r\n`;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport BlockForm from \"components/BlockForm\";\r\nimport * as S from \"./style\";\r\n\r\nconst BlockchainForm = ({ dataRows }) => {\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [blocks, setBlocks] = useState(initialBlocks);\r\n\r\n  const handleHashChange = useCallback((hash, index) => {\r\n    if (index != blocks.length - 1) {\r\n      setBlocks((blocks) => {\r\n        const tmpBlocks = [...blocks];\r\n        tmpBlocks[index + 1] = { previousHash: hash };\r\n        return tmpBlocks;\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <S.BlockchainForm>\r\n      {blocks.map(({ previousHash }, index) => {\r\n        return (\r\n          <BlockForm\r\n            key={index}\r\n            previousHash={previousHash}\r\n            onHash={handleHashChange}\r\n            index={index}\r\n            width=\"325px\"\r\n            dataRows={dataRows}\r\n            isDirty={isDirty}\r\n            setIsDirty={setIsDirty}\r\n          />\r\n        );\r\n      })}\r\n    </S.BlockchainForm>\r\n  );\r\n};\r\n\r\nconst initialBlocks = [\r\n  { previousHash: \"0000000000000000000000000000000000000000000000000000000000000000\" },\r\n  { previousHash: \" \" },\r\n  { previousHash: \" \" },\r\n  { previousHash: \" \" },\r\n  { previousHash: \" \" },\r\n];\r\n\r\nexport default BlockchainForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Blockchain = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport BlockchainForm from \"components/BlockchainForm\";\r\nimport * as S from \"./style\";\r\n\r\nconst Blockchain = () => {\r\n  return (\r\n    <S.Blockchain>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Blockchain\r\n          </Text>\r\n        </S.Header>\r\n        <BlockchainForm dataRows={12} />\r\n      </S.Content>\r\n    </S.Blockchain>\r\n  );\r\n};\r\n\r\nexport default Blockchain;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Distributed = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Blocks = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 50px;\r\n  width: calc(100vw - 400px);\r\n  padding: 0px 25px 25px;\r\n  overflow-x: auto;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Blockchains = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport BlockchainForm from \"components/BlockchainForm\";\r\nimport * as S from \"./style\";\r\n\r\nconst Distributed = () => {\r\n  return (\r\n    <S.Distributed>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Distributed\r\n          </Text>\r\n        </S.Header>\r\n        <S.Blockchains>\r\n          <BlockchainForm dataRows={5} />\r\n          <BlockchainForm dataRows={5} />\r\n          <BlockchainForm dataRows={5} />\r\n        </S.Blockchains>\r\n      </S.Content>\r\n    </S.Distributed>\r\n  );\r\n};\r\n\r\nexport default Distributed;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Keys = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const KeyPair = styled.div`\r\n  display: flex;\r\n  margin-block-start: 50px;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  width: 600px;\r\n`;\r\n\r\nexport const PrivateKey = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const PublicKey = styled.div``;\r\n","import React, { useContext } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport TextInput from \"components/TextInput\";\r\nimport Button from \"components/Button\";\r\nimport { KeysContext } from \"contexts/KeysContextProvider\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst Keys = () => {\r\n  const { privateKey, publicKey, handleRandomClick, handlePrivateKeyChange } =\r\n    useContext(KeysContext);\r\n\r\n  return (\r\n    <S.Keys>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Public / Private Key Pairs\r\n          </Text>\r\n        </S.Header>\r\n        <S.KeyPair>\r\n          <S.PrivateKey>\r\n            <TextInput\r\n              fieldName=\"privateKey\"\r\n              variant={C.VARIANT.outlined}\r\n              onChange={handlePrivateKeyChange}\r\n              label={\"Private Key\"}\r\n              value={privateKey}\r\n            />\r\n            <Button\r\n              label=\"Random\"\r\n              onClick={handleRandomClick}\r\n              color={\"primary\"}\r\n              variant=\"outlined\"\r\n            />\r\n          </S.PrivateKey>\r\n          <S.PublicKey>\r\n            <TextInput\r\n              fieldName=\"publicKey\"\r\n              variant={C.VARIANT.outlined}\r\n              onChange={() => {}}\r\n              label={\"Public Key\"}\r\n              value={publicKey}\r\n              disabled\r\n            />\r\n          </S.PublicKey>\r\n        </S.KeyPair>\r\n      </S.Content>\r\n    </S.Keys>\r\n  );\r\n};\r\n\r\nexport default Keys;\r\n","import React from \"react\";\r\nimport { Tabs as MuiTabs } from \"@material-ui/core\";\r\nimport { Tab as MuiTab } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Tabs = ({ items, onChange, activeTab }) => {\r\n  const handleChange = (_e, newValue) => {\r\n    onChange(newValue);\r\n  };\r\n\r\n  return (\r\n    <MuiTabs\r\n      value={activeTab}\r\n      onChange={handleChange}\r\n      aria-label=\"Navigation\"\r\n      indicatorColor=\"primary\"\r\n      textColor=\"primary\"\r\n      variant=\"scrollable\"\r\n      scrollButtons=\"auto\"\r\n    >\r\n      {items.map((item, index) => {\r\n        return <MuiTab key={index} label={item} index={index} />;\r\n      })}\r\n    </MuiTabs>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Tabs = styled.div``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Signatures = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const SignatureContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 25px;\r\n  width: 600px;\r\n`;\r\n\r\nexport const Navigation = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const SignMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 20px;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const VerifyMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-block-start: 20px;\r\n  gap: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport TextInput from \"components/TextInput\";\r\nimport Button from \"components/Button\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst SignMessage = ({\r\n  message,\r\n  privateKey,\r\n  messageSignature,\r\n  onMessageChange,\r\n  onPrivateKeyChange,\r\n  onSignClick,\r\n}) => {\r\n  return (\r\n    <S.SignMessage>\r\n      <TextInput\r\n        fieldName=\"message\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={onMessageChange}\r\n        label={\"Message\"}\r\n        multiline\r\n        rows={12}\r\n        value={message}\r\n      />\r\n      <TextInput\r\n        fieldName=\"privateKey\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={onPrivateKeyChange}\r\n        label={\"Private Key\"}\r\n        value={privateKey}\r\n      />\r\n      <Button label=\"Sign\" onClick={onSignClick} color={\"primary\"} variant=\"outlined\" />\r\n      <TextInput\r\n        fieldName=\"messageSignature\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={() => {}}\r\n        label={\"Message Signature\"}\r\n        value={messageSignature}\r\n        disabled\r\n      />\r\n    </S.SignMessage>\r\n  );\r\n};\r\n\r\nexport default SignMessage;\r\n","import React from \"react\";\r\nimport TextInput from \"components/TextInput\";\r\nimport Button from \"components/Button\";\r\nimport * as C from \"constant\";\r\nimport * as S from \"./style\";\r\n\r\nconst VerifyMessage = ({\r\n  message,\r\n  publicKey,\r\n  messageSignature,\r\n  onMessageChange,\r\n  onPublicKeyChange,\r\n  onVerifyClick,\r\n}) => {\r\n  return (\r\n    <S.VerifyMessage>\r\n      <TextInput\r\n        fieldName=\"message\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={onMessageChange}\r\n        label={\"Message\"}\r\n        multiline\r\n        rows={12}\r\n        value={message}\r\n      />\r\n      <TextInput\r\n        fieldName=\"publicKey\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={onPublicKeyChange}\r\n        label={\"Public Key\"}\r\n        value={publicKey}\r\n      />\r\n      <TextInput\r\n        fieldName=\"signature\"\r\n        variant={C.VARIANT.outlined}\r\n        onChange={() => {}}\r\n        label={\"Signature\"}\r\n        value={messageSignature}\r\n      />\r\n      <Button\r\n        label=\"Verify\"\r\n        onClick={onVerifyClick}\r\n        color={\"primary\"}\r\n        variant=\"outlined\"\r\n      />\r\n    </S.VerifyMessage>\r\n  );\r\n};\r\n\r\nexport default VerifyMessage;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Tabs from \"components/Tabs\";\r\nimport SignMessage from \"./SignMessage\";\r\nimport VerifyMessage from \"./VerifyMessage\";\r\nimport { KeysContext } from \"contexts/KeysContextProvider\";\r\nimport * as S from \"./style\";\r\n\r\nconst Signatures = () => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n  const { privateKey, publicKey } = useContext(KeysContext);\r\n  const [messageSignature, setMessageSignature] = useState(\"\");\r\n  const [visibleSection, setVisibleSection] = useState(SECTIONS.sign);\r\n\r\n  useEffect(() => {\r\n    activeTab === 1\r\n      ? setVisibleSection(SECTIONS.verify)\r\n      : setVisibleSection(SECTIONS.sign);\r\n  }, [activeTab]);\r\n\r\n  const sign = () => {};\r\n\r\n  const verify = () => {};\r\n\r\n  const handleMessageChange = () => {};\r\n\r\n  const handlePrivateKeyChange = () => {};\r\n\r\n  const handlePublicKeyChange = () => {};\r\n\r\n  const handleTabChange = (newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <S.Signatures>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Signatures\r\n          </Text>\r\n        </S.Header>\r\n        <S.SignatureContent>\r\n          <S.Navigation>\r\n            <Tabs\r\n              items={[\"Sign\", \"Verify\"]}\r\n              activeTab={activeTab}\r\n              onChange={handleTabChange}\r\n            />\r\n          </S.Navigation>\r\n          {visibleSection === SECTIONS.sign ? (\r\n            <SignMessage\r\n              message={message}\r\n              privateKey={privateKey}\r\n              messageSignature={messageSignature}\r\n              onMessageChange={handleMessageChange}\r\n              onPrivateKeyChange={handlePrivateKeyChange}\r\n              onSignClick={sign}\r\n            />\r\n          ) : (\r\n            <VerifyMessage\r\n              message={message}\r\n              publicKey={publicKey}\r\n              messageSignature={messageSignature}\r\n              onMessageChange={handleMessageChange}\r\n              onPublicKeyChange={handlePublicKeyChange}\r\n              onSignClick={sign}\r\n              onVerifyClick={verify}\r\n            />\r\n          )}\r\n        </S.SignatureContent>\r\n      </S.Content>\r\n    </S.Signatures>\r\n  );\r\n};\r\n\r\nconst SECTIONS = {\r\n  sign: \"sign\",\r\n  verify: \"verify\",\r\n};\r\n\r\nexport default Signatures;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport * as C from \"constant\";\r\n\r\nconst NavBar = () => {\r\n  const history = useHistory();\r\n  const [value, setValue] = useState(0);\r\n  const match = useRouteMatch(\"/:page\");\r\n\r\n  useEffect(() => {\r\n    navigateToInitialTab();\r\n  }, [match]);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    const page = _e.target?.textContent?.toLowerCase();\r\n    history.push(C.ROUTES[page]);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const navigateToInitialTab = () => {\r\n    if (match) {\r\n      const page = match.params.page;\r\n      const pageIndex = TABS.findIndex(\r\n        (tab) => tab?.toLowerCase() === page?.toLowerCase()\r\n      );\r\n      setValue(pageIndex || 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n      >\r\n        {TABS.map((tab, index) => {\r\n          return <Tab key={index} label={tab} index={index} />;\r\n        })}\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst TABS = [\r\n  \"Home\",\r\n  \"Hash\",\r\n  \"Block\",\r\n  \"Blockchain\",\r\n  \"Distributed\",\r\n  \"Tokens\",\r\n  \"Coinbase\",\r\n  \"Keys\",\r\n  \"Signatures\",\r\n  \"Transaction\",\r\n];\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { KeysContextProvider } from \"contexts/KeysContextProvider\";\r\nimport { Home, Hash, Block, Blockchain, Distributed, Keys, Signatures } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport * as C from \"constant\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <KeysContextProvider>\r\n            <Route exact path={C.ROUTES.home} component={Home} />\r\n            <Route exact path={C.ROUTES.hash} component={Hash} />\r\n            <Route exact path={C.ROUTES.block} component={Block} />\r\n            <Route exact path={C.ROUTES.distributed} component={Distributed} />\r\n            <Route exact path={C.ROUTES.keys} component={Keys} />\r\n            <Route exact path={C.ROUTES.signatures} component={Signatures} />\r\n            <Route exact path={C.ROUTES.blockChain} component={Blockchain} />\r\n          </KeysContextProvider>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}